/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package de.hsrm.mi.swtp.exchangeplatform.controller;

import de.hsrm.mi.swtp.exchangeplatform.model.rest_models.StudentDTO;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import java.util.List;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-12-11T08:15:17.638366+01:00[Europe/Berlin]")

@Validated
@Api(value = "students", description = "the students API")
public interface StudentsApi {

    @ApiOperation(value = "Returns detailed information about the student specified by the Id.", nickname = "getStudentById", notes = "", response = StudentDTO.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A single student", response = StudentDTO.class) })
    @RequestMapping(value = "/students/{studentId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<StudentDTO> getStudentById(@ApiParam(value = "Numeric ID of the student to get",required=true) @PathVariable("studentId") Long studentId);


    @ApiOperation(value = "Returns a list of students", nickname = "getStudents", notes = "", response = StudentDTO.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of Students", response = StudentDTO.class, responseContainer = "List") })
    @RequestMapping(value = "/students",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<StudentDTO>> getStudents(@ApiParam(value = "") @Valid @RequestParam(value = "name", required = false) String name,@ApiParam(value = "") @Valid @RequestParam(value = "studentId", required = false) Long studentId);

}
